/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const TeamsIndexLazyImport = createFileRoute('/teams/')()
const TeamsNewLazyImport = createFileRoute('/teams/new')()
const TeamsImportLazyImport = createFileRoute('/teams/import')()
const TeamsTeamIdLazyImport = createFileRoute('/teams/$teamId')()
const TeamsTeamIdSquadsLazyImport = createFileRoute('/teams/$teamId/squads')()
const TeamsTeamIdPlayersLazyImport = createFileRoute('/teams/$teamId/players')()
const TeamsTeamIdMatchesLazyImport = createFileRoute('/teams/$teamId/matches')()
const TeamsTeamIdEditLazyImport = createFileRoute('/teams/$teamId/edit')()
const TeamsTeamIdCompetitionsLazyImport = createFileRoute(
  '/teams/$teamId/competitions',
)()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TeamsIndexLazyRoute = TeamsIndexLazyImport.update({
  path: '/teams/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/teams.index.lazy').then((d) => d.Route))

const TeamsNewLazyRoute = TeamsNewLazyImport.update({
  path: '/teams/new',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/teams.new.lazy').then((d) => d.Route))

const TeamsImportLazyRoute = TeamsImportLazyImport.update({
  path: '/teams/import',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/teams.import.lazy').then((d) => d.Route))

const TeamsTeamIdLazyRoute = TeamsTeamIdLazyImport.update({
  path: '/teams/$teamId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/teams.$teamId.lazy').then((d) => d.Route))

const TeamsTeamIdSquadsLazyRoute = TeamsTeamIdSquadsLazyImport.update({
  path: '/teams/$teamId/squads',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/teams_.$teamId.squads.lazy').then((d) => d.Route),
)

const TeamsTeamIdPlayersLazyRoute = TeamsTeamIdPlayersLazyImport.update({
  path: '/teams/$teamId/players',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/teams_.$teamId.players.lazy').then((d) => d.Route),
)

const TeamsTeamIdMatchesLazyRoute = TeamsTeamIdMatchesLazyImport.update({
  path: '/teams/$teamId/matches',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/teams_.$teamId.matches.lazy').then((d) => d.Route),
)

const TeamsTeamIdEditLazyRoute = TeamsTeamIdEditLazyImport.update({
  path: '/teams/$teamId/edit',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/teams_.$teamId.edit.lazy').then((d) => d.Route),
)

const TeamsTeamIdCompetitionsLazyRoute =
  TeamsTeamIdCompetitionsLazyImport.update({
    path: '/teams/$teamId/competitions',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/teams_.$teamId.competitions.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/teams/$teamId': {
      id: '/teams/$teamId'
      path: '/teams/$teamId'
      fullPath: '/teams/$teamId'
      preLoaderRoute: typeof TeamsTeamIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/teams/import': {
      id: '/teams/import'
      path: '/teams/import'
      fullPath: '/teams/import'
      preLoaderRoute: typeof TeamsImportLazyImport
      parentRoute: typeof rootRoute
    }
    '/teams/new': {
      id: '/teams/new'
      path: '/teams/new'
      fullPath: '/teams/new'
      preLoaderRoute: typeof TeamsNewLazyImport
      parentRoute: typeof rootRoute
    }
    '/teams/': {
      id: '/teams/'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof TeamsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/teams/$teamId/competitions': {
      id: '/teams/$teamId/competitions'
      path: '/teams/$teamId/competitions'
      fullPath: '/teams/$teamId/competitions'
      preLoaderRoute: typeof TeamsTeamIdCompetitionsLazyImport
      parentRoute: typeof rootRoute
    }
    '/teams/$teamId/edit': {
      id: '/teams/$teamId/edit'
      path: '/teams/$teamId/edit'
      fullPath: '/teams/$teamId/edit'
      preLoaderRoute: typeof TeamsTeamIdEditLazyImport
      parentRoute: typeof rootRoute
    }
    '/teams/$teamId/matches': {
      id: '/teams/$teamId/matches'
      path: '/teams/$teamId/matches'
      fullPath: '/teams/$teamId/matches'
      preLoaderRoute: typeof TeamsTeamIdMatchesLazyImport
      parentRoute: typeof rootRoute
    }
    '/teams/$teamId/players': {
      id: '/teams/$teamId/players'
      path: '/teams/$teamId/players'
      fullPath: '/teams/$teamId/players'
      preLoaderRoute: typeof TeamsTeamIdPlayersLazyImport
      parentRoute: typeof rootRoute
    }
    '/teams/$teamId/squads': {
      id: '/teams/$teamId/squads'
      path: '/teams/$teamId/squads'
      fullPath: '/teams/$teamId/squads'
      preLoaderRoute: typeof TeamsTeamIdSquadsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/teams/$teamId': typeof TeamsTeamIdLazyRoute
  '/teams/import': typeof TeamsImportLazyRoute
  '/teams/new': typeof TeamsNewLazyRoute
  '/teams': typeof TeamsIndexLazyRoute
  '/teams/$teamId/competitions': typeof TeamsTeamIdCompetitionsLazyRoute
  '/teams/$teamId/edit': typeof TeamsTeamIdEditLazyRoute
  '/teams/$teamId/matches': typeof TeamsTeamIdMatchesLazyRoute
  '/teams/$teamId/players': typeof TeamsTeamIdPlayersLazyRoute
  '/teams/$teamId/squads': typeof TeamsTeamIdSquadsLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/teams/$teamId': typeof TeamsTeamIdLazyRoute
  '/teams/import': typeof TeamsImportLazyRoute
  '/teams/new': typeof TeamsNewLazyRoute
  '/teams': typeof TeamsIndexLazyRoute
  '/teams/$teamId/competitions': typeof TeamsTeamIdCompetitionsLazyRoute
  '/teams/$teamId/edit': typeof TeamsTeamIdEditLazyRoute
  '/teams/$teamId/matches': typeof TeamsTeamIdMatchesLazyRoute
  '/teams/$teamId/players': typeof TeamsTeamIdPlayersLazyRoute
  '/teams/$teamId/squads': typeof TeamsTeamIdSquadsLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/teams/$teamId': typeof TeamsTeamIdLazyRoute
  '/teams/import': typeof TeamsImportLazyRoute
  '/teams/new': typeof TeamsNewLazyRoute
  '/teams/': typeof TeamsIndexLazyRoute
  '/teams/$teamId/competitions': typeof TeamsTeamIdCompetitionsLazyRoute
  '/teams/$teamId/edit': typeof TeamsTeamIdEditLazyRoute
  '/teams/$teamId/matches': typeof TeamsTeamIdMatchesLazyRoute
  '/teams/$teamId/players': typeof TeamsTeamIdPlayersLazyRoute
  '/teams/$teamId/squads': typeof TeamsTeamIdSquadsLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/teams/$teamId'
    | '/teams/import'
    | '/teams/new'
    | '/teams'
    | '/teams/$teamId/competitions'
    | '/teams/$teamId/edit'
    | '/teams/$teamId/matches'
    | '/teams/$teamId/players'
    | '/teams/$teamId/squads'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/teams/$teamId'
    | '/teams/import'
    | '/teams/new'
    | '/teams'
    | '/teams/$teamId/competitions'
    | '/teams/$teamId/edit'
    | '/teams/$teamId/matches'
    | '/teams/$teamId/players'
    | '/teams/$teamId/squads'
  id:
    | '__root__'
    | '/'
    | '/teams/$teamId'
    | '/teams/import'
    | '/teams/new'
    | '/teams/'
    | '/teams/$teamId/competitions'
    | '/teams/$teamId/edit'
    | '/teams/$teamId/matches'
    | '/teams/$teamId/players'
    | '/teams/$teamId/squads'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  TeamsTeamIdLazyRoute: typeof TeamsTeamIdLazyRoute
  TeamsImportLazyRoute: typeof TeamsImportLazyRoute
  TeamsNewLazyRoute: typeof TeamsNewLazyRoute
  TeamsIndexLazyRoute: typeof TeamsIndexLazyRoute
  TeamsTeamIdCompetitionsLazyRoute: typeof TeamsTeamIdCompetitionsLazyRoute
  TeamsTeamIdEditLazyRoute: typeof TeamsTeamIdEditLazyRoute
  TeamsTeamIdMatchesLazyRoute: typeof TeamsTeamIdMatchesLazyRoute
  TeamsTeamIdPlayersLazyRoute: typeof TeamsTeamIdPlayersLazyRoute
  TeamsTeamIdSquadsLazyRoute: typeof TeamsTeamIdSquadsLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  TeamsTeamIdLazyRoute: TeamsTeamIdLazyRoute,
  TeamsImportLazyRoute: TeamsImportLazyRoute,
  TeamsNewLazyRoute: TeamsNewLazyRoute,
  TeamsIndexLazyRoute: TeamsIndexLazyRoute,
  TeamsTeamIdCompetitionsLazyRoute: TeamsTeamIdCompetitionsLazyRoute,
  TeamsTeamIdEditLazyRoute: TeamsTeamIdEditLazyRoute,
  TeamsTeamIdMatchesLazyRoute: TeamsTeamIdMatchesLazyRoute,
  TeamsTeamIdPlayersLazyRoute: TeamsTeamIdPlayersLazyRoute,
  TeamsTeamIdSquadsLazyRoute: TeamsTeamIdSquadsLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/teams/$teamId",
        "/teams/import",
        "/teams/new",
        "/teams/",
        "/teams/$teamId/competitions",
        "/teams/$teamId/edit",
        "/teams/$teamId/matches",
        "/teams/$teamId/players",
        "/teams/$teamId/squads"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/teams/$teamId": {
      "filePath": "teams.$teamId.lazy.tsx"
    },
    "/teams/import": {
      "filePath": "teams.import.lazy.tsx"
    },
    "/teams/new": {
      "filePath": "teams.new.lazy.tsx"
    },
    "/teams/": {
      "filePath": "teams.index.lazy.tsx"
    },
    "/teams/$teamId/competitions": {
      "filePath": "teams_.$teamId.competitions.lazy.tsx"
    },
    "/teams/$teamId/edit": {
      "filePath": "teams_.$teamId.edit.lazy.tsx"
    },
    "/teams/$teamId/matches": {
      "filePath": "teams_.$teamId.matches.lazy.tsx"
    },
    "/teams/$teamId/players": {
      "filePath": "teams_.$teamId.players.lazy.tsx"
    },
    "/teams/$teamId/squads": {
      "filePath": "teams_.$teamId.squads.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
